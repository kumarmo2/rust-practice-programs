# admin web panel
admin:
  access_log_path: /var/log/admin_logs
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  - name: http_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 3000
    filter_chains:
        filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: lb/reverse-proxy # this is just a prefix for any stats logging.
              # upgrade_configs:
              # - upgrade_type: websocket
              # For understaing routing.
              # https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/http_routing#http-routing
              # https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/route_matching
              # https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#config-http-filters-router
              #https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/router/v3/router.proto#router
              request_timeout: 300s
              http_filters:
                # Role of `router` filter is request routing according to the "route table".
                # Route Table can be configured statically using `route_config` or dynamically using `rds`(not sure what scoped routes do)
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              access_log:
                - name: envoy.access_loggers.file
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: /var/log/access_logs
              route_config:
              # route_config basically configures the `route table` for the connection manager
              # Precisely one of rds, route_config, scoped_routes must be set.
                name: all
                virtual_hosts:
                  - name: personalwebsite
                    domains:
                      - "*"
                    routes:
                      - match:
                          prefix: "/"
                        route:
                          cluster: apis



  clusters:
    - name: apis
      connect_timeout: 1s
      type: strict_dns
      load_assignment:
        cluster_name: apis
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: host.docker.internal
                      port_value: 3001
